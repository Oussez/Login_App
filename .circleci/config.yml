version: 2.1
orbs:
  orb-tools: circleci/orb-tools@8.27.4
  sonarcloud: sonarsource/sonarcloud@dev:alpha
jobs: # a collection of steps
  build: #title of 1rd section: runs not using Workflows must have a `build` job as entry point
    working_directory: ~/circleci-php # Here where the docker image and other files will be installed
    docker:
      - image: php:7.3-apache
        environment:
          APP_ENV: test
    steps: # list of commands 
      - checkout # special step to check out source code to working directory
      - sonarcloud/scan
installingservices: #title of 2rd section
    steps: #installing some required services below
      - run:
          name: Install system packages
          command: apt-get update && apt-get -y install git
      - run:
          name: Install PHP extensions
          command: docker-php-ext-install pdo
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer invalid'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      - run:
          name: Display PHP information
          command: |
            php -v
            php composer.phar --version
      - run:
          name: update project dependencies
          command: php composer.phar update
      - run:
          name: Install project dependencies
          command: php composer.phar install
unitest: #title of 3rd section
    steps: # launch unit test
      - run:
          name: Run Unit tests
          command: vendor/bin/phpunit
workflows:
  publish-dev:
    jobs:
      - orb-tools/pack:
          source-dir: src/main
          destination-orb-path: orb.yml
          workspace-path: orb.yml
          artifact-path: orb.yml
      - orb-tools/publish-dev:
          name: publish-dev
          context: Publishing Orb
          orb-name: sonarsource/sonarcloud
          requires: [orb-tools/pack]
      - orb-tools/publish:
          context: Publishing Orb
          orb-ref: sonarsource/sonarcloud@1.1.0
          attach-workspace: true
          filters:
            branches:
              only: main